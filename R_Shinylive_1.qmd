---
title: "R Shinyliveapp 1"
---
## R-Shinylive Test 1

```{shinylive-r}
#| standalone: true
#| viewerHeight: 900
ui <- fluidPage(
  sidebarLayout(
    sidebarPanel(
      sliderInput("n", "Gruppengröße", min = 0, max = 100, value = 20),
      sliderInput("d", "Cohen's d", min = 0, max = 3, value = 0.4, step = 0.1),
      verbatimTextOutput("pvaluetxt")
    ),
    mainPanel(
      plotOutput("histogram1"),
      plotOutput("histogram2")
    )
  )
)

# Server
server <- function(input, output, session) {
  
  output$histogram1 <- renderPlot({
    set.seed(2345)
    num_samples <- input$n
    
    var1 <- rnorm(num_samples, mean = 0, sd = 1)
    var2 <- rnorm(num_samples, mean = input$d, sd = 1)
    
    df <- data.frame(Gruppe1 = var1, Gruppe2 = var2)
    # Pivoting the dataset from wide to long format
    df_long <- reshape(
      data = df,
      varying = list(names(df)[1:2]),  # Columns to be melted
      v.names = "Value",                      # Name of the variable column in the long format
      timevar = "Variable",                   # Name of the column containing variable names
      times = c("Gruppe 1", "Gruppe 2"),      # New variable names in long format
      direction = "long"                      # Pivoting from wide to long
    )
    
    stripchart(Value ~ Variable, data = df_long,
               pch = 19, frame = FALSE, 
               vertical = FALSE,
               method = "jitter")
  })
  
  output$pvaluetxt <- renderText({
    set.seed(2345)
    num_samples <- input$n
    
    var1 <- rnorm(num_samples, mean = 0, sd = 1)
    var2 <- rnorm(num_samples, mean = input$d, sd = 1)
    
    t_test <- t.test(var1, var2)
    paste("p-Wert:", round(t_test$p.value, digits = 3))
  })
}

shinyApp(ui = ui, server = server)


```